services:
  main:
    container_name: main
    image: ccsiew/game-core:latest
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - mysql
      - mongodb
      - redis
    volumes:
      - ./.env:/app/.env
  mysql:
    image: mysql:latest
    restart: always
    container_name: mysql
    networks:
      - webnet
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - webnet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./backup:/data/backup
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - webnet
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  webserver:
    image: nginx:latest
    container_name: webserver
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - main
    networks:
      - webnet
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - webnet
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  webnet:
    driver: bridge
volumes:
  mysql_data:
  mongo_data:
  redis_data:
