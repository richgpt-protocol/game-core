/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { JackpotHash, JackpotHashInterface } from "../JackpotHash";

const _abi = [
  {
    type: "function",
    name: "emitJackpotHash",
    inputs: [
      {
        name: "uid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ticketId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "jackpotHashes",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "JackpotHashEmitted",
    inputs: [
      {
        name: "uid",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ticketId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "hash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
] as const;

export class JackpotHash__factory {
  static readonly abi = _abi;
  static createInterface(): JackpotHashInterface {
    return new Interface(_abi) as JackpotHashInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): JackpotHash {
    return new Contract(address, _abi, runner) as unknown as JackpotHash;
  }
}
