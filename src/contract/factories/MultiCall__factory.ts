/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { MultiCall, MultiCallInterface } from "../MultiCall";

const _abi = [
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "target",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "values",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "error",
    name: "MULTICALL_REVERT",
    inputs: [],
  },
] as const;

export class MultiCall__factory {
  static readonly abi = _abi;
  static createInterface(): MultiCallInterface {
    return new Interface(_abi) as MultiCallInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MultiCall {
    return new Contract(address, _abi, runner) as unknown as MultiCall;
  }
}
